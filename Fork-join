import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RecursiveTask;

class SearchWork extends RecursiveTask<Integer>
{int arr[],s,e,searchElement;
    public SearchWork(int arr[],int s,int e,int searchElement)
    {
        this.arr=arr;
        this.s=s;
        this.e=e;
        this.searchElement=searchElement;
    }
    @Override
    protected Integer compute()
    {
        return countFrequency();
    }
    private Integer countFrequency(){
        int c=0;
        for (int j=s;j<=e;j++){
            if (arr[j]==searchElement){
                c=c+1;
            }
        }
        return c;
    }
}
public class ForkJoinExample {
    public static void main(String[] args) {
        int arr[]={50, 32, 61, 50, 49, 50, 16, 71, 50, 94, 10, 90, 12, 50, 78, 98, 88, 99 };
        int searchElement=50;
        int s=0;
        int e=arr.length-1;
        ForkJoinPool fjp=ForkJoinPool.commonPool();
        SearchWork sw= new SearchWork(arr,s,e,searchElement);
        int freq=fjp.invoke(sw);
        System.out.println("The number "+searchElement+" is found "+freq+" times");
    }
}
